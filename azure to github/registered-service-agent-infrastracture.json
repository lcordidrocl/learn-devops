{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apis_RegisteredAgentServicesAPI_path": {
            "type": "SecureString"
        },
        "vulnerabilityAssessments_Default_storageContainerPath": {
            "type": "SecureString"
        },
        "staticSites_react_app_name": {
            "defaultValue": "react-app",
            "type": "String"
        },
        "sites_dev_registered_agents_name": {
            "defaultValue": "dev-registered-agents",
            "type": "String"
        },
        "servers_dev_registered_agents_name": {
            "defaultValue": "dev-registered-agents",
            "type": "String"
        },
        "components_dev_registered_agents_name": {
            "defaultValue": "dev-registered-agents",
            "type": "String"
        },
        "storageAccounts_devregisteredagents_name": {
            "defaultValue": "devregisteredagents",
            "type": "String"
        },
        "serverfarms_ASP_devregisteredagentsgroup_844b_name": {
            "defaultValue": "ASP-devregisteredagentsgroup-844b",
            "type": "String"
        },
        "service_RegisteredAgentServicesAPIapi_name": {
            "defaultValue": "RegisteredAgentServicesAPIapi",
            "type": "String"
        },
        "actionGroups_Application_Insights_Smart_Detection_name": {
            "defaultValue": "Application Insights Smart Detection",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___dev_registered_agents_name": {
            "defaultValue": "failure anomalies - dev-registered-agents",
            "type": "String"
        },
        "workspaces_DefaultWorkspace_34127eed_69d8_4e84_b79d_e1a2631fa913_WUS2_externalid": {
            "defaultValue": "/subscriptions/34127eed-69d8-4e84-b79d-e1a2631fa913/resourceGroups/DefaultResourceGroup-WUS2/providers/Microsoft.OperationalInsights/workspaces/DefaultWorkspace-34127eed-69d8-4e84-b79d-e1a2631fa913-WUS2",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2023-03-01-preview",
            "name": "[parameters('service_RegisteredAgentServicesAPIapi_name')]",
            "location": "West Central US",
            "sku": {
                "name": "Consumption",
                "capacity": 0
            },
            "properties": {
                "publisherEmail": "agentsregistered@gmail.com",
                "publisherName": "Khader Abdul",
                "notificationSenderEmail": "apimgmt-noreply@mail.windowsazure.com",
                "hostnameConfigurations": [
                    {
                        "type": "Proxy",
                        "hostName": "registeredagentservicesapiapi.azure-api.net",
                        "negotiateClientCertificate": false,
                        "defaultSslBinding": true,
                        "certificateSource": "BuiltIn"
                    }
                ],
                "customProperties": {
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2": "False"
                },
                "virtualNetworkType": "None",
                "disableGateway": false,
                "natGatewayState": "Disabled",
                "apiVersionConstraint": {},
                "publicNetworkAccess": "Enabled",
                "legacyPortalStatus": "Enabled",
                "developerPortalStatus": "Enabled"
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2023-01-01",
            "name": "[parameters('actionGroups_Application_Insights_Smart_Detection_name')]",
            "location": "Global",
            "properties": {
                "groupShortName": "SmartDetect",
                "enabled": true,
                "emailReceivers": [],
                "smsReceivers": [],
                "webhookReceivers": [],
                "eventHubReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": [],
                "armRoleReceivers": [
                    {
                        "name": "Monitoring Contributor",
                        "roleId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "useCommonAlertSchema": true
                    },
                    {
                        "name": "Monitoring Reader",
                        "roleId": "43d0d8ad-25c7-4714-9337-8ba259a9fe05",
                        "useCommonAlertSchema": true
                    }
                ]
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02",
            "name": "[parameters('components_dev_registered_agents_name')]",
            "location": "westus2",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "RetentionInDays": 90,
                "WorkspaceResourceId": "[parameters('workspaces_DefaultWorkspace_34127eed_69d8_4e84_b79d_e1a2631fa913_WUS2_externalid')]",
                "IngestionMode": "LogAnalytics",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2023-02-01-preview",
            "name": "[parameters('servers_dev_registered_agents_name')]",
            "location": "southcentralus",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "dev-admin",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "administrators": {
                    "administratorType": "ActiveDirectory",
                    "principalType": "User",
                    "login": "agentsregistered_gmail.com#EXT#@agentsregisteredgmail.onmicrosoft.com",
                    "sid": "938c5549-f40a-431d-b26f-2ddbfa883682",
                    "tenantId": "d021a8c2-005d-4496-974f-50f65143cf6a",
                    "azureADOnlyAuthentication": false
                },
                "restrictOutboundNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "name": "[parameters('storageAccounts_devregisteredagents_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-09-01",
            "name": "[parameters('serverfarms_ASP_devregisteredagentsgroup_844b_name')]",
            "location": "West Central US",
            "sku": {
                "name": "F1",
                "tier": "Free",
                "size": "F1",
                "family": "F",
                "capacity": 0
            },
            "kind": "app",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 0,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/staticSites",
            "apiVersion": "2022-09-01",
            "name": "[parameters('staticSites_react_app_name')]",
            "location": "Central US",
            "sku": {
                "name": "Free",
                "tier": "Free"
            },
            "properties": {
                "repositoryUrl": "https://dev.azure.com/registeredagents/RegisteredAgents.NET/_git/RegisteredAgents UI",
                "branch": "main",
                "stagingEnvironmentPolicy": "Enabled",
                "allowConfigFileUpdates": true,
                "provider": "DevOps",
                "enterpriseGradeCdnStatus": "Disabled"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/RegisteredAgentServicesAPI')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]"
            ],
            "properties": {
                "displayName": "RegisteredAgentServicesAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",
                "apiRevision": "1",
                "subscriptionRequired": true,
                "serviceUrl": "https://dev-registered-agents.azurewebsites.net",
                "protocols": [
                    "https"
                ],
                "authenticationSettings": {
                    "oAuth2AuthenticationSettings": [],
                    "openidAuthenticationSettings": []
                },
                "subscriptionKeyParameterNames": {
                    "header": "Ocp-Apim-Subscription-Key",
                    "query": "subscription-key"
                },
                "isCurrent": true,
                "path": "[parameters('apis_RegisteredAgentServicesAPI_path')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/policies",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]"
            ],
            "properties": {
                "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - Only the <forward-request> policy element can appear within the <backend> section element.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n-->\r\n<policies>\r\n  <inbound></inbound>\r\n  <backend>\r\n    <forward-request />\r\n  </backend>\r\n  <outbound></outbound>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/subscriptions",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/master')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]"
            ],
            "properties": {
                "scope": "[concat(resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name')), '/')]",
                "displayName": "Built-in all-access subscription",
                "state": "active",
                "allowTracing": false
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/tags",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/Roles')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]"
            ],
            "properties": {
                "displayName": "Roles"
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_dev_registered_agents_name'), '/degradationindependencyduration')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "degradationindependencyduration",
                    "DisplayName": "Degradation in dependency duration",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_dev_registered_agents_name'), '/degradationinserverresponsetime')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "degradationinserverresponsetime",
                    "DisplayName": "Degradation in server response time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_dev_registered_agents_name'), '/digestMailConfiguration')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "digestMailConfiguration",
                    "DisplayName": "Digest Mail Configuration",
                    "Description": "This rule describes the digest mail preferences",
                    "HelpUrl": "www.homail.com",
                    "IsHidden": true,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_dev_registered_agents_name'), '/extension_billingdatavolumedailyspikeextension')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_billingdatavolumedailyspikeextension",
                    "DisplayName": "Abnormal rise in daily data volume (preview)",
                    "Description": "This detection rule automatically analyzes the billing data generated by your application, and can warn you about an unusual increase in your application's billing costs",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/billing-data-volume-daily-spike.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_dev_registered_agents_name'), '/extension_canaryextension')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_canaryextension",
                    "DisplayName": "Canary extension",
                    "Description": "Canary extension",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/",
                    "IsHidden": true,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_dev_registered_agents_name'), '/extension_exceptionchangeextension')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_exceptionchangeextension",
                    "DisplayName": "Abnormal rise in exception volume (preview)",
                    "Description": "This detection rule automatically analyzes the exceptions thrown in your application, and can warn you about unusual patterns in your exception telemetry.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/abnormal-rise-in-exception-volume.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_dev_registered_agents_name'), '/extension_memoryleakextension')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_memoryleakextension",
                    "DisplayName": "Potential memory leak detected (preview)",
                    "Description": "This detection rule automatically analyzes the memory consumption of each process in your application, and can warn you about potential memory leaks or increased memory consumption.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/memory-leak.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_dev_registered_agents_name'), '/extension_securityextensionspackage')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_securityextensionspackage",
                    "DisplayName": "Potential security issue detected (preview)",
                    "Description": "This detection rule automatically analyzes the telemetry generated by your application and detects potential security issues.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/application-security-detection-pack.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_dev_registered_agents_name'), '/extension_traceseveritydetector')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_traceseveritydetector",
                    "DisplayName": "Degradation in trace severity ratio (preview)",
                    "Description": "This detection rule automatically analyzes the trace logs emitted from your application, and can warn you about unusual patterns in the severity of your trace telemetry.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/degradation-in-trace-severity-ratio.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_dev_registered_agents_name'), '/longdependencyduration')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "longdependencyduration",
                    "DisplayName": "Long dependency duration",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_dev_registered_agents_name'), '/migrationToAlertRulesCompleted')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "migrationToAlertRulesCompleted",
                    "DisplayName": "Migration To Alert Rules Completed",
                    "Description": "A configuration that controls the migration state of Smart Detection to Smart Alerts",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": true,
                    "IsEnabledByDefault": false,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": false,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_dev_registered_agents_name'), '/slowpageloadtime')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "slowpageloadtime",
                    "DisplayName": "Slow page load time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_dev_registered_agents_name'), '/slowserverresponsetime')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "slowserverresponsetime",
                    "DisplayName": "Slow server response time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "Microsoft.Sql/servers/administrators",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/ActiveDirectory')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "administratorType": "ActiveDirectory",
                "login": "agentsregistered_gmail.com#EXT#@agentsregisteredgmail.onmicrosoft.com",
                "sid": "938c5549-f40a-431d-b26f-2ddbfa883682",
                "tenantId": "d021a8c2-005d-4496-974f-50f65143cf6a"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advancedThreatProtectionSettings",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Default')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingSettings",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/azureADOnlyAuthentications",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "azureADOnlyAuthentication": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/connectionPolicies",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/default')]",
            "location": "southcentralus",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "connectionType": "Default"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'))]",
            "location": "southcentralus",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "sku": {
                "name": "Basic",
                "tier": "Basic",
                "capacity": 5
            },
            "kind": "v12.0,user",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 2147483648,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "requestedBackupStorageRedundancy": "Geo",
                "maintenanceConfigurationId": "/subscriptions/34127eed-69d8-4e84-b79d-e1a2631fa913/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default",
                "isLedgerOn": false,
                "availabilityZone": "NoPreference"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/master/Default')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/devOpsAuditingSettings",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged",
                "autoRotationEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/extendedAuditingSettings",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Khader')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Khader_HL')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Luciano')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Luciano_2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Victorio')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Victorio 2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/ServiceManaged')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/sqlVulnerabilityAssessments",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                },
                "storageContainerPath": "[parameters('vulnerabilityAssessments_Default_storageContainerPath')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccounts_devregisteredagents_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devregisteredagents_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "changeFeed": {
                    "enabled": false
                },
                "restorePolicy": {
                    "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                },
                "isVersioningEnabled": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccounts_devregisteredagents_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devregisteredagents_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccounts_devregisteredagents_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devregisteredagents_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccounts_devregisteredagents_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devregisteredagents_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-09-01",
            "name": "[parameters('sites_dev_registered_agents_name')]",
            "location": "West Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_devregisteredagentsgroup_844b_name'))]"
            ],
            "kind": "app",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_dev_registered_agents_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_dev_registered_agents_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_devregisteredagentsgroup_844b_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "B1118768A80F795121EA68DDC25B2BDA2C9581F6F1E40A534E8D3AE62E464533",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('sites_dev_registered_agents_name'), '/ftp')]",
            "location": "West Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_dev_registered_agents_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('sites_dev_registered_agents_name'), '/scm')]",
            "location": "West Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_dev_registered_agents_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('sites_dev_registered_agents_name'), '/web')]",
            "location": "West Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_dev_registered_agents_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v7.0",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$dev-registered-agents",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "publicNetworkAccess": "Enabled",
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 0,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('sites_dev_registered_agents_name'), '/', parameters('sites_dev_registered_agents_name'), '.azurewebsites.net')]",
            "location": "West Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_dev_registered_agents_name'))]"
            ],
            "properties": {
                "siteName": "dev-registered-agents",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/siteextensions",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('sites_dev_registered_agents_name'), '/Microsoft.AspNetCore.AzureAppServices.SiteExtension')]",
            "location": "West Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_dev_registered_agents_name'))]"
            ]
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2021-04-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___dev_registered_agents_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]",
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector"
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_dev_registered_agents_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/RegisteredAgentServicesAPI/get-role')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]"
            ],
            "properties": {
                "displayName": "/role - GET",
                "method": "GET",
                "urlTemplate": "/role",
                "templateParameters": [],
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "Success",
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/RegisteredAgentServicesAPI/get-role-id')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]"
            ],
            "properties": {
                "displayName": "/role/{id} - GET",
                "method": "GET",
                "urlTemplate": "/role/{id}",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "Format - int32.",
                        "type": "integer",
                        "required": true,
                        "values": [],
                        "schemaId": "651ffbc02354cb1a8876164d",
                        "typeName": "Id"
                    }
                ],
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "Success",
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/RegisteredAgentServicesAPI/post-role')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]"
            ],
            "properties": {
                "displayName": "/role - POST",
                "method": "POST",
                "urlTemplate": "/role",
                "templateParameters": [],
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": [
                        {
                            "contentType": "application/json",
                            "examples": {
                                "default": {
                                    "value": {}
                                }
                            },
                            "schemaId": "651ffbc02354cb1a8876164d",
                            "typeName": "CreateRoleDto"
                        },
                        {
                            "contentType": "text/json",
                            "examples": {
                                "default": {
                                    "value": {}
                                }
                            },
                            "schemaId": "651ffbc02354cb1a8876164d",
                            "typeName": "CreateRoleDto"
                        },
                        {
                            "contentType": "application/*+json",
                            "examples": {
                                "default": {
                                    "value": {}
                                }
                            },
                            "schemaId": "651ffbc02354cb1a8876164d",
                            "typeName": "CreateRoleDto"
                        }
                    ]
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "Success",
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/schemas",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/RegisteredAgentServicesAPI/651ffbc02354cb1a8876164d')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]"
            ],
            "properties": {
                "contentType": "application/vnd.ms-azure-apim.swagger.definitions+json",
                "document": {}
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/wikis",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/RegisteredAgentServicesAPI/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]"
            ],
            "properties": {
                "documents": []
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/Default')]",
            "location": "South Central US",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "makeBackupsImmutable": false,
                "weeklyRetention": "PT0S",
                "monthlyRetention": "PT0S",
                "yearlyRetention": "PT0S",
                "weekOfYear": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "retentionDays": 7,
                "diffBackupIntervalInHours": 12
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2023-02-01-preview",
            "name": "[concat(parameters('servers_dev_registered_agents_name'), '/', parameters('servers_dev_registered_agents_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_dev_registered_agents_name'), parameters('servers_dev_registered_agents_name'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_dev_registered_agents_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/RegisteredAgentServicesAPI/get-role/Roles')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI', 'get-role')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/RegisteredAgentServicesAPI/get-role-id/Roles')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI', 'get-role-id')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/RegisteredAgentServicesAPI/post-role/Roles')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI', 'post-role')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/tags/operationLinks",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/Roles/651f679ab6c3ea18e0ad0b75')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/tags', parameters('service_RegisteredAgentServicesAPIapi_name'), 'Roles')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI', 'get-role')]"
            ],
            "properties": {
                "operationId": "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI', 'get-role')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/tags/operationLinks",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/Roles/651f679ab6c3ea18e0ad0b76')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/tags', parameters('service_RegisteredAgentServicesAPIapi_name'), 'Roles')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI', 'post-role')]"
            ],
            "properties": {
                "operationId": "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI', 'post-role')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/tags/operationLinks",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('service_RegisteredAgentServicesAPIapi_name'), '/Roles/651f679ab6c3ea18e0ad0b77')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/tags', parameters('service_RegisteredAgentServicesAPIapi_name'), 'Roles')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_RegisteredAgentServicesAPIapi_name'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI', 'get-role-id')]"
            ],
            "properties": {
                "operationId": "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_RegisteredAgentServicesAPIapi_name'), 'RegisteredAgentServicesAPI', 'get-role-id')]"
            }
        }
    ]
}